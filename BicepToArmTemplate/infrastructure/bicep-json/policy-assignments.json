{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "16716471153105476159"
    }
  },
  "parameters": {
    "applyRequireResourceGroupTags": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Apply - Require Tags on resource groups"
      }
    },
    "applyMultiWriteLocations": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Apply - should not have multiple write locations enabled on cosmos db"
      }
    },
    "applyApplicationInsightsCap": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Apply - should have a cap applied to application-insights"
      }
    }
  },
  "variables": {
    "$fxv#0": "{\n  \"definitions\": [\n    {\n      \"properties\": {\n        \"name\": \"RequireTag-ResourceGroup-Environment\",\n        \"displayName\": \"Require Tag (Resource Group) - Environment\",\n        \"description\": \"Requires that all resource groups have an environment tag.\",\n        \"mode\": \"All\",\n        \"metadata\": {\n          \"category\": \"Tags\"\n        }\n      },\n      \"roles\": [\n        \"Tag Contributor\"\n      ],\n      \"rules\": {\n        \"if\": {\n          \"allOf\": [\n            {\n              \"field\": \"type\",\n              \"equals\": \"Microsoft.Resources/subscriptions/resourceGroups\"\n            },\n            {\n              \"field\": \"tags['Environment']\",\n              \"notIn\": \"[parameters('allowedValues')]\"\n            }\n          ]\n        },\n        \"then\": {\n          \"effect\": \"deny\"\n        }\n      },\n      \"parameters\": {\n        \"allowedValues\": {\n          \"type\": \"Array\",\n          \"metadata\": {\n            \"displayName\": \"Allowed Values\",\n            \"description\": \"The allowed values for this tag.\"\n          },\n          \"allowedValues\": [\n            \"Live\",\n            \"Testing\",\n            \"UAT\",\n            \"QAT\",\n            \"Demo\",\n            \"Experiment\"\n          ],\n          \"defaultValue\": [\n            \"Live\",\n            \"Testing\",\n            \"UAT\",\n            \"QAT\",\n            \"Demo\",\n            \"Experiment\"\n          ]\n        }\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"Require-Cap-ApplicationInsights\",\n        \"displayName\": \"Require A Cap On ApplicationInsights\",\n        \"description\": \"A cap must be set on application insights so that we do not cause unnecessary costs\",\n        \"mode\": \"All\",\n        \"metadata\": {\n          \"category\": \"Tags\"\n        }\n      },\n      \"roles\": [],\n      \"rules\": {\n        \"if\": {\n          \"allOf\": [\n            {\n              \"field\": \"type\",\n              \"equals\": \"Microsoft.OperationalInsights/workspaces\"\n            },\n            {\n              \"field\": \"Microsoft.OperationalInsights/workspaces/workspaceCapping.dailyQuotaGb\",\n              \"equals\": \"-1\"\n            }\n          ]\n        },\n        \"then\": {\n          \"effect\": \"deny\"\n        }\n      },\n      \"parameters\": {\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"RequireTag-ResourceGroup-Scale\",\n        \"displayName\": \"Require Tag (Resource Group) - Scale\",\n        \"description\": \"Requires that scalable resources have a scale tag.\",\n        \"mode\": \"All\",\n        \"metadata\": {\n          \"category\": \"Tags\"\n        }\n      },\n      \"roles\": [\n        \"Tag Contributor\"\n      ],\n      \"rules\": {\n        \"if\": {\n          \"allOf\": [\n            {\n              \"anyOf\": [\n                {\n                  \"field\": \"type\",\n                  \"equals\": \"Microsoft.Web/serverFarms\"\n                }\n              ]\n            },\n            {\n              \"field\": \"tags['Scale']\",\n              \"notIn\": [\n                \"Normal\",\n                \"Temporary\"\n              ]\n            }\n          ]\n        },\n        \"then\": {\n          \"effect\": \"deny\"\n        }\n      },\n      \"parameters\": {\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"Cosmos-Multiple-Write-Locations\",\n        \"displayName\": \"Multiple Write Locations\",\n        \"description\": \"Enabling multiple write locations can cause extra charges make sure a limit is set\",\n        \"mode\": \"Indexed\",\n        \"metadata\": {\n          \"category\": \"Cosmos\"\n        }\n      },\n      \"roles\": [\n        \"Tag Contributor\"\n      ],\n      \"rules\": {\n        \"if\": {\n          \"allOf\": [\n            {\n              \"field\": \"type\",\n              \"equals\": \"Microsoft.DocumentDB/databaseAccounts\"\n            },\n            {\n              \"field\": \"Microsoft.DocumentDB/databaseAccounts/enableMultipleWriteLocations\",\n              \"exists\": true\n            },\n            {\n              \"field\": \"Microsoft.DocumentDB/databaseAccounts/enableMultipleWriteLocations\",\n              \"notEquals\": false\n            }\n          ]\n        },\n        \"then\": {\n          \"effect\": \"deny\"\n        }\n      },\n      \"parameters\": {\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"Cosmos-Partition-Full-Alert\",\n        \"displayName\": \"Partition Near Full Alert\",\n        \"description\": \"Be alerted when a partition is near full to avoid data loss\",\n        \"mode\": \"Indexed\",\n        \"metadata\": {\n          \"category\": \"Cosmos\"\n        }\n      },\n      \"parameters\": {\n      },\n      \"roles\": [\n        \"Contributor\"\n      ],\n      \"rules\": {\n        \"if\": {\n          \"field\": \"type\",\n          \"equals\": \"Microsoft.DocumentDB/databaseAccounts\"\n        }, \n        \"then\": {\n          \"effect\": \"auditIfNotExists\",\n          \"details\": {\n            \"type\": \"microsoft.insights/scheduledqueryrules\",\n            \"name\": \"[concat(field('name'),'-partition-near-full-alert')]\"\n          }\n        }\n      }\n    },\n    {\n      \"properties\":{\n        \"name\": \"Require-ResourceGroup-Owner\",\n        \"displayName\": \"Require Tag (Resource Group) - Owner\",\n        \"description\": \"Requires that all resources have the Owner tag.\",\n        \"mode\": \"All\",\n        \"metadata\": {\n          \"category\": \"Tags\"\n        }\n      },\n      \"roles\": [\n        \"Tag Contributor\"\n      ],\n      \"rules\": {\n        \"if\": {\n          \"allOf\": [\n            {\n              \"field\": \"type\",\n              \"equals\": \"Microsoft.Resources/subscriptions/resourceGroups\"\n            },\n            {\n              \"field\": \"[concat('tags[', 'Owner', ']')]\",\n              \"exists\": \"false\"\n            }\n          ]\n        },\n        \"then\": {\n          \"effect\": \"deny\"\n        }\n      },\n      \"parameters\": {\n      }\n    },\n    {\n      \"properties\": {\n        \"name\": \"Tag-Owner-InheritFromResourceGroup\",\n        \"displayName\": \"Inherit Owner Tag From Resource Group\",\n        \"description\": \"Inherit the Owner tag from the resource group.\",\n        \"mode\": \"Indexed\",\n        \"metadata\": {\n          \"category\": \"Tags\"\n        }\n      },\n      \"roles\": [\n        \"Tag Contributor\"\n      ],\n      \"rules\": {\n        \"if\": {\n          \"allOf\": [\n            {\n              \"field\": \"[concat('tags[', 'Owner', ']')]\",\n              \"notEquals\": \"[resourcegroup().tags['Owner']]\"\n            },\n            {\n              \"value\": \"[resourceGroup().tags['Owner']]\",\n              \"exists\": \"true\"\n            },\n            {\n              \"value\": \"[resourceGroup().tags['Owner']]\",\n              \"notEquals\": \"\"\n            }\n          ]\n        },\n        \"then\": {\n          \"effect\": \"modify\",\n          \"details\": {\n            \"operations\": [\n              {\n                \"operation\": \"addOrReplace\",\n                \"field\": \"[concat('tags[', 'Owner', ']')]\",\n                \"value\": \"[resourceGroup().tags['Owner']]\"\n              }\n            ],\n            \"roleDefinitionIds\": [\n              \"/providers/Microsoft.Authorization/roleDefinitions/4a9ae827-6dc8-4573-8ac7-8239d42aa03f\"\n            ]\n          }\n        }\n      },\n      \"parameters\": {\n      }\n    }\n  ]\n}",
    "location": "westeurope",
    "policies": "[json(variables('$fxv#0'))]",
    "tagInitName": "Require Tags",
    "roleIds": {
      "tagContributor": "4a9ae827-6dc8-4573-8ac7-8239d42aa03f"
    },
    "cosmosInitName": "Cosmos Multiple Write Locations to be disabled",
    "appInsightsInitName": "Cap Required on App Insights"
  },
  "resources": [
    {
      "copy": {
        "name": "customPolicies",
        "count": "[length(variables('policies').definitions)]"
      },
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[variables('policies').definitions[copyIndex()].properties.displayName]",
      "properties": {
        "displayName": "[variables('policies').definitions[copyIndex()].properties.displayName]",
        "description": "[variables('policies').definitions[copyIndex()].properties.description]",
        "policyType": "Custom",
        "mode": "[variables('policies').definitions[copyIndex()].properties.mode]",
        "metadata": "[variables('policies').definitions[copyIndex()].properties.metadata]",
        "parameters": "[variables('policies').definitions[copyIndex()].parameters]",
        "policyRule": "[variables('policies').definitions[copyIndex()].rules]"
      }
    },
    {
      "condition": "[parameters('applyRequireResourceGroupTags')]",
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[variables('tagInitName')]",
      "properties": {
        "description": "Require tags to exist on resource groups and resources",
        "displayName": "New Orbit recommended tag policies",
        "metadata": {
          "category": "compliance",
          "version": "1.0.0"
        },
        "parameters": {},
        "policyDefinitions": [
          {
            "parameters": {},
            "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require Tag (Resource Group) - Environment', subscription().subscriptionId)]"
          },
          {
            "parameters": {},
            "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require Tag (Resource Group) - Scale', subscription().subscriptionId)]"
          },
          {
            "parameters": {},
            "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require Tag (Resource Group) - Owner', subscription().subscriptionId)]"
          },
          {
            "parameters": {},
            "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Inherit Owner Tag From Resource Group', subscription().subscriptionId)]"
          }
        ],
        "policyType": "Custom"
      },
      "dependsOn": [
        "customPolicies"
      ]
    },
    {
      "condition": "[parameters('applyRequireResourceGroupTags')]",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2021-06-01",
      "name": "Tag Policies",
      "location": "[variables('location')]",
      "properties": {
        "description": "Require tags to exist on resource groups and resources",
        "displayName": "New Orbit recommended tag policies",
        "enforcementMode": "Default",
        "nonComplianceMessages": [],
        "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policySetDefinitions/{1}', subscription().subscriptionId, variables('tagInitName'))]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', variables('tagInitName'))]"
      ]
    },
    {
      "condition": "[parameters('applyRequireResourceGroupTags')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscriptionResourceId('Microsoft.Authorization/policyAssignments', 'Tag Policies'), subscription().subscriptionId, variables('roleIds').tagContributor)]",
      "properties": {
        "principalId": "[reference(subscriptionResourceId('Microsoft.Authorization/policyAssignments', 'Tag Policies'), '2021-06-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIds').tagContributor)]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policyAssignments', 'Tag Policies')]"
      ]
    },
    {
      "condition": "[parameters('applyMultiWriteLocations')]",
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[variables('cosmosInitName')]",
      "properties": {
        "description": "Require Multiple Write Locations to be disabled as it has a cost implication",
        "displayName": "Cosmos Multi Write Policy",
        "metadata": {
          "category": "compliance",
          "version": "1.0.0"
        },
        "parameters": {},
        "policyDefinitions": [
          {
            "parameters": {},
            "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Multiple Write Locations', subscription().subscriptionId)]"
          }
        ],
        "policyType": "Custom"
      },
      "dependsOn": [
        "customPolicies"
      ]
    },
    {
      "condition": "[parameters('applyMultiWriteLocations')]",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2021-06-01",
      "name": "Cosmos Multi Write Policy",
      "location": "[variables('location')]",
      "properties": {
        "description": "Require Multiple Write Locations to be disabled as it has a cost implication",
        "displayName": "Require Multiple Write Locations to be disabled",
        "enforcementMode": "Default",
        "nonComplianceMessages": [],
        "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policySetDefinitions/{1}', subscription().subscriptionId, variables('cosmosInitName'))]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', variables('cosmosInitName'))]"
      ]
    },
    {
      "condition": "[parameters('applyApplicationInsightsCap')]",
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[variables('appInsightsInitName')]",
      "properties": {
        "description": "Require a cap on application-insights",
        "displayName": "Require A Cap On ApplicationInsights",
        "metadata": {
          "category": "compliance",
          "version": "1.0.0"
        },
        "parameters": {},
        "policyDefinitions": [
          {
            "parameters": {},
            "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require A Cap On ApplicationInsights', subscription().subscriptionId)]"
          }
        ],
        "policyType": "Custom"
      },
      "dependsOn": [
        "customPolicies"
      ]
    },
    {
      "condition": "[parameters('applyApplicationInsightsCap')]",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2021-06-01",
      "name": "Require Cap On App Insights",
      "location": "[variables('location')]",
      "properties": {
        "description": "Require a cap on application-insights",
        "displayName": "Require A Cap On ApplicationInsights",
        "enforcementMode": "Default",
        "nonComplianceMessages": [],
        "policyDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policySetDefinitions/{1}', subscription().subscriptionId, variables('appInsightsInitName'))]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', variables('appInsightsInitName'))]"
      ]
    }
  ]
}