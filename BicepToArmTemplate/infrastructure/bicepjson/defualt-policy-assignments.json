{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "4268032760258747699"
    }
  },
  "parameters": {
    "subscriptionId": {
      "type": "string"
    }
  },
  "variables": {
    "$fxv#0": "{\r\n  \"definitions\": [\r\n    {\r\n      \"properties\": {\r\n        \"name\": \"RequireTag-ResourceGroup-Environment\",\r\n        \"displayName\": \"Require Tag (Resource Group) - Environment\",\r\n        \"description\": \"Requires that all resource groups have an environment tag.\",\r\n        \"mode\": \"All\",\r\n        \"metadata\": {\r\n          \"category\": \"Tags\"\r\n        }\r\n      },\r\n      \"roles\": [\r\n        \"Tag Contributor\"\r\n      ],\r\n      \"rules\": {\r\n        \"if\": {\r\n          \"allOf\": [\r\n            {\r\n              \"field\": \"type\",\r\n              \"equals\": \"Microsoft.Resources/subscriptions/resourceGroups\"\r\n            },\r\n            {\r\n              \"field\": \"tags['Environment']\",\r\n              \"notIn\": \"[parameters('allowedValues')]\"\r\n            }\r\n          ]\r\n        },\r\n        \"then\": {\r\n          \"effect\": \"deny\"\r\n        }\r\n      },\r\n      \"parameters\": {\r\n        \"allowedValues\": {\r\n          \"type\": \"Array\",\r\n          \"metadata\": {\r\n            \"displayName\": \"Allowed Values\",\r\n            \"description\": \"The allowed values for this tag.\"\r\n          },\r\n          \"allowedValues\": [\r\n            \"Live\",\r\n            \"Testing\",\r\n            \"UAT\",\r\n            \"QAT\",\r\n            \"Demo\",\r\n            \"Experiment\"\r\n          ],\r\n          \"defaultValue\": [\r\n            \"Live\",\r\n            \"Testing\",\r\n            \"UAT\",\r\n            \"QAT\",\r\n            \"Demo\",\r\n            \"Experiment\"\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"properties\": {\r\n        \"name\": \"Require-Cap-ApplicationInsights\",\r\n        \"displayName\": \"Require A Cap On ApplicationInsights\",\r\n        \"description\": \"A cap must be set on application insights so that we do not cause unnecessary costs\",\r\n        \"mode\": \"All\",\r\n        \"metadata\": {\r\n          \"category\": \"Tags\"\r\n        }\r\n      },\r\n      \"roles\": [],\r\n      \"rules\": {\r\n        \"if\": {\r\n          \"allOf\": [\r\n            {\r\n              \"field\": \"type\",\r\n              \"equals\": \"Microsoft.OperationalInsights/workspaces\"\r\n            },\r\n            {\r\n              \"field\": \"Microsoft.OperationalInsights/workspaces/workspaceCapping.dailyQuotaGb\",\r\n              \"equals\": \"-1\"\r\n            }\r\n          ]\r\n        },\r\n        \"then\": {\r\n          \"effect\": \"deny\"\r\n        }\r\n      },\r\n      \"parameters\": {\r\n      }\r\n    },\r\n    {\r\n      \"properties\": {\r\n        \"name\": \"RequireTag-ResourceGroup-Scale\",\r\n        \"displayName\": \"Require Tag (Resource Group) - Scale\",\r\n        \"description\": \"Requires that scalable resources have a scale tag.\",\r\n        \"mode\": \"All\",\r\n        \"metadata\": {\r\n          \"category\": \"Tags\"\r\n        }\r\n      },\r\n      \"roles\": [\r\n        \"Tag Contributor\"\r\n      ],\r\n      \"rules\": {\r\n        \"if\": {\r\n          \"allOf\": [\r\n            {\r\n              \"anyOf\": [\r\n                {\r\n                  \"field\": \"type\",\r\n                  \"equals\": \"Microsoft.Web/serverFarms\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"field\": \"tags['Scale']\",\r\n              \"notIn\": [\r\n                \"Normal\",\r\n                \"Temporary\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"then\": {\r\n          \"effect\": \"deny\"\r\n        }\r\n      },\r\n      \"parameters\": {\r\n      }\r\n    },\r\n    {\r\n      \"properties\": {\r\n        \"name\": \"Cosmos-Multiple-Write-Locations\",\r\n        \"displayName\": \"Multiple Write Locations\",\r\n        \"description\": \"Enabling multiple write locations can cause extra charges make sure a limit is set\",\r\n        \"mode\": \"Indexed\",\r\n        \"metadata\": {\r\n          \"category\": \"Cosmos\"\r\n        }\r\n      },\r\n      \"roles\": [\r\n        \"Tag Contributor\"\r\n      ],\r\n      \"rules\": {\r\n        \"if\": {\r\n          \"allOf\": [\r\n            {\r\n              \"field\": \"type\",\r\n              \"equals\": \"Microsoft.DocumentDB/databaseAccounts\"\r\n            },\r\n            {\r\n              \"field\": \"Microsoft.DocumentDB/databaseAccounts/enableMultipleWriteLocations\",\r\n              \"exists\": true\r\n            },\r\n            {\r\n              \"field\": \"Microsoft.DocumentDB/databaseAccounts/enableMultipleWriteLocations\",\r\n              \"notEquals\": false\r\n            }\r\n          ]\r\n        },\r\n        \"then\": {\r\n          \"effect\": \"deny\"\r\n        }\r\n      },\r\n      \"parameters\": {\r\n      }\r\n    },\r\n    {\r\n      \"properties\":{\r\n        \"name\": \"Require-ResourceGroup-Owner\",\r\n        \"displayName\": \"Require Tag (Resource Group) - Owner\",\r\n        \"description\": \"Requires that all resources have the Owner tag.\",\r\n        \"mode\": \"All\",\r\n        \"metadata\": {\r\n          \"category\": \"Tags\"\r\n        }\r\n      },\r\n      \"roles\": [\r\n        \"Tag Contributor\"\r\n      ],\r\n      \"rules\": {\r\n        \"if\": {\r\n          \"allOf\": [\r\n            {\r\n              \"field\": \"type\",\r\n              \"equals\": \"Microsoft.Resources/subscriptions/resourceGroups\"\r\n            },\r\n            {\r\n              \"field\": \"[concat('tags[', 'Owner', ']')]\",\r\n              \"exists\": \"false\"\r\n            }\r\n          ]\r\n        },\r\n        \"then\": {\r\n          \"effect\": \"deny\"\r\n        }\r\n      },\r\n      \"parameters\": {\r\n      }\r\n    },\r\n    {\r\n      \"properties\": {\r\n        \"name\": \"Tag-Owner-InheritFromResourceGroup\",\r\n        \"displayName\": \"Inherit Owner Tag From Resource Group\",\r\n        \"description\": \"Inherit the Owner tag from the resource group.\",\r\n        \"mode\": \"Indexed\",\r\n        \"metadata\": {\r\n          \"category\": \"Tags\"\r\n        }\r\n      },\r\n      \"roles\": [\r\n        \"Tag Contributor\"\r\n      ],\r\n      \"rules\": {\r\n        \"if\": {\r\n          \"allOf\": [\r\n            {\r\n              \"field\": \"[concat('tags[', 'Owner', ']')]\",\r\n              \"notEquals\": \"[resourcegroup().tags['Owner']]\"\r\n            },\r\n            {\r\n              \"value\": \"[resourceGroup().tags['Owner']]\",\r\n              \"exists\": \"true\"\r\n            },\r\n            {\r\n              \"value\": \"[resourceGroup().tags['Owner']]\",\r\n              \"notEquals\": \"\"\r\n            }\r\n          ]\r\n        },\r\n        \"then\": {\r\n          \"effect\": \"modify\",\r\n          \"details\": {\r\n            \"operations\": [\r\n              {\r\n                \"operation\": \"addOrReplace\",\r\n                \"field\": \"[concat('tags[', 'Owner', ']')]\",\r\n                \"value\": \"[resourceGroup().tags['Owner']]\"\r\n              }\r\n            ],\r\n            \"roleDefinitionIds\": [\r\n              \"/providers/Microsoft.Authorization/roleDefinitions/4a9ae827-6dc8-4573-8ac7-8239d42aa03f\"\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      \"parameters\": {\r\n      }\r\n    }\r\n  ]\r\n}",
    "location": "westeurope",
    "policySet": {
      "initiativeName": "New Orbit Defaults",
      "displayName": "Policies containing New Orbit recommended defaults",
      "category": "compliance",
      "version": "1.0.0",
      "policyToInclude": [
        "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require Tag (Resource Group) - Environment', parameters('subscriptionId'))]",
        "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require A Cap On ApplicationInsights', parameters('subscriptionId'))]",
        "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require Tag (Resource Group) - Scale', parameters('subscriptionId'))]",
        "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Multiple Write Locations', parameters('subscriptionId'))]",
        "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Require Tag (Resource Group) - Owner', parameters('subscriptionId'))]",
        "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policyDefinitions/Inherit Owner Tag From Resource Group', parameters('subscriptionId'))]"
      ],
      "description": "Environment tag is required, Log analytics cap is required, Requires that scalable resources have a scale tag ,Multiple Write Locations"
    },
    "assignment": {
      "assignmentName": "Default policies",
      "assignmentDisplayName": "Default policies",
      "assignmentDescription": "Assiging default policies to jays subscription",
      "assignmentPolicyID": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/policySetDefinitions/New Orbit Defaults', parameters('subscriptionId'))]",
      "assignmentEnforcementMode": "Default",
      "assignmentMessage": [],
      "assignmentParameters": ""
    },
    "policies": "[json(variables('$fxv#0'))]",
    "roleIds": {
      "tagContributer": "4a9ae827-6dc8-4573-8ac7-8239d42aa03f"
    }
  },
  "resources": [
    {
      "copy": {
        "name": "customPolicies",
        "count": "[length(variables('policies').definitions)]"
      },
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[variables('policies').definitions[copyIndex()].properties.displayName]",
      "properties": {
        "displayName": "[variables('policies').definitions[copyIndex()].properties.displayName]",
        "description": "[variables('policies').definitions[copyIndex()].properties.description]",
        "policyType": "Custom",
        "mode": "[variables('policies').definitions[copyIndex()].properties.mode]",
        "metadata": "[variables('policies').definitions[copyIndex()].properties.metadata]",
        "parameters": "[variables('policies').definitions[copyIndex()].parameters]",
        "policyRule": "[variables('policies').definitions[copyIndex()].rules]"
      }
    },
    {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[variables('policySet').initiativeName]",
      "properties": {
        "copy": [
          {
            "name": "policyDefinitions",
            "count": "[length(variables('policySet').policyToInclude)]",
            "input": {
              "parameters": {},
              "policyDefinitionId": "[variables('policySet').policyToInclude[copyIndex('policyDefinitions')]]",
              "policyDefinitionReferenceId": ""
            }
          }
        ],
        "description": "[variables('policySet').description]",
        "displayName": "[variables('policySet').displayName]",
        "metadata": {
          "category": "[variables('policySet').category]",
          "version": "[variables('policySet').version]"
        },
        "parameters": {},
        "policyType": "Custom"
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2021-06-01",
      "name": "[variables('assignment').assignmentName]",
      "location": "[variables('location')]",
      "properties": {
        "description": "[variables('assignment').assignmentDescription]",
        "displayName": "[variables('assignment').assignmentDisplayName]",
        "enforcementMode": "[variables('assignment').assignmentEnforcementMode]",
        "nonComplianceMessages": "[variables('assignment').assignmentMessage]",
        "policyDefinitionId": "[variables('assignment').assignmentPolicyID]"
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscriptionResourceId('Microsoft.Authorization/policyAssignments', variables('assignment').assignmentName), variables('roleIds').tagContributer)]",
      "properties": {
        "principalId": "[reference(subscriptionResourceId('Microsoft.Authorization/policyAssignments', variables('assignment').assignmentName), '2021-06-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIds').tagContributer)]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policyAssignments', variables('assignment').assignmentName)]"
      ]
    }
  ]
}